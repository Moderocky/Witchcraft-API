package mx.kenzie.witchcraft.spell.single;

import com.destroystokyo.paper.ParticleBuilder;
import mx.kenzie.witchcraft.Minecraft;
import mx.kenzie.witchcraft.WitchcraftAPI;
import mx.kenzie.witchcraft.spell.StandardSpell;
import mx.kenzie.witchcraft.spell.effect.ParticleCreator;
import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Particle;
import org.bukkit.entity.Entity;
import org.bukkit.entity.LivingEntity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.bukkit.util.Vector;

import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.Map;
import java.util.concurrent.TimeUnit;

public class InvulnerabilitySpell extends StandardSpell {

    protected final Duration duration = Duration.of(10, ChronoUnit.MINUTES);
    private transient final ParticleCreator creator = ParticleCreator.of(Particle.WAX_ON.builder().count(0));

    public InvulnerabilitySpell(Map<String, Object> map) {
        super(map);
    }

    @Override
    public boolean canCast(LivingEntity caster) {
        return true;
    }

    @Override
    protected void run(LivingEntity caster, int range, float scale, double amplitude) {
        final PotionEffect resistance = new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, (int) (duration.toMillis() / 50), 8, true, false, true);
        caster.addPotionEffect(resistance);
        WitchcraftAPI.executor.submit(() -> {
            final ParticleBuilder builder = creator.getBuilder();
            for (int i = 0; i < 3; i++) {
                final Location centre = caster.getEyeLocation();
                for (Vector vector : creator.createPoof(3, 50)) {
                    final Location point = centre.clone().add(vector);
                    final Vector offset = point.toVector().subtract(centre.toVector()).multiply(0.2);
                    builder.offset(offset.getX(), offset.getY(), offset.getZ());
                    builder.location(point).spawn();
                    WitchcraftAPI.sleep(20);
                }
            }
        });
        final Listener listener = new Listener() {
            @EventHandler
            public void event(EntityDamageEvent event) {
                if (event.isCancelled()) return;
                if (!event.getEntity().equals(caster)) return;
                switch (event.getCause()) {
                    case SUICIDE, VOID:
                        break;
                    default:
                        event.setCancelled(true);
                }
                final Entity entity = event.getEntity();
                creator.getBuilder().offset(0, 0, 0);
                creator.drawPoof(entity.getLocation().add(0, 1, 0), 0.8, 8);
            }
        };
        Bukkit.getPluginManager().registerEvents(listener, WitchcraftAPI.plugin);
        WitchcraftAPI.scheduler.schedule(() -> Minecraft.getInstance().ensureMain(() -> EntityDamageEvent.getHandlerList().unregister(listener)), duration.toSeconds(), TimeUnit.SECONDS);
    }


}
